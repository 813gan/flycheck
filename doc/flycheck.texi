\input texinfo
@setfilename flycheck.info
@settitle The Flycheck manual
@documentencoding UTF-8
@documentlanguage en

@c Macros

@c A Github link shortcut
@macro gh{url, text}
@uref{https://github.com/\url\, \text\}
@end macro

@macro flyc{checker}
@code{\checker\}
@end macro

@macro iflyc{checker}
@item @flyc{\checker\}
@end macro

@syncodeindex vr cp
@syncodeindex fn cp
@syncodeindex tp cp

@copying
This manual is for Flycheck, the on-the-fly syntax checker for GNU Emacs.

Copyright @copyright{} 2013, 2014 Sebastian Wiesner

@quotation
  Permission is granted to copy, distribute and/or modify this document
  under the terms of the GNU Free Documentation License, Version 1.3 or
  any later version published by the Free Software Foundation; with no
  Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A
  copy of the license is included in the section entitled ``GNU Free
  Documentation License''.
@end quotation
@end copying

@dircategory Emacs
@direntry
* Flycheck: (flycheck). On the fly syntax checking (aka ``flymake done right'')
@end direntry

@titlepage
@end titlepage

@contents

@node Top, , (dir), (dir)
@top Flycheck manual

@insertcopying

@menu
* Credits::                     Developers and contributors to Flycheck
* GNU Free Documentation License::  The license of this documentation
* Syntax checkers::             Available syntax checkers
* Definition Index::            An index of all types, functions and variables
@end menu

@node Credits, GNU Free Documentation License, Top
@comment  node-name,  next,  previous,  up
@appendix Credits

Flycheck is written and maintained by @gh{lunaryorn, Sebastian Wiesner},
with contributions from the following people.  Their help and ideas,
their support and patches are greatly appreciated.

@itemize @bullet
@item
@gh{bbatsov, Bozhidar Batsov} provided valuable feedback and
refinements, brought Flycheck to a larger user base by adding it to his
awesome @gh{bbatsov/prelude, Prelude project}, and added a Ruby syntax
checker using @command{rubocop}.

@item
@gh{bbbscarter, Simon Carter} provided valuable feedback about automatic
syntax checking, and took great effort to debug some very subtle issues
in it.

@item
@gh{dhaley, Damon Haley} helped to shape and test the PHP CodeSniffer
checker.

@item
@gh{dholm, David Holm} added C/C++ syntax and style checkers using
@command{clang} and @command{cppcheck} respectively, and contributed a
Verilog syntax checker using @command{verilator}.

@item
@gh{gfrey, Gereon Frey} fixed the @command{go-build} syntax checker and
improved its tests.

@item
@gh{wyuenho, Jimmy Yuen Ho Wong} added the HTML syntax checker and the
jshint Javascript checker, and did valuable testing and bug fixing.

@item
@gh{kwitek,Krzysztof Witkowski} implemented @code{eval} support in
Flycheck commands.

@item
@gh{magnars/,Magnar Sveen} developed the awesome @gh{magnars/dash.el,
dash.el} and @gh{magnars/s.el, s.el} libraries, that drive considerable
parts of Flycheck's internals.

@item
@gh{maio, Marian Schubert} added the Perl syntax checker.

@item
@gh{markhellewell, Mark Hellewell} added the Puppet syntax and style
checkers.

@item
@gh{scrooloose, Martin Grenfell} created the awesome Vim library
@gh{scrooloose/syntastic, syntastic} which inspired this project and
many of its checkers.

@item
@gh{BinaryKhaos, Matthias Dahl} improved the performance of Flycheck's
temp file handling.

@item
@gh{mitchty, Mitch Tishmack} added support for Microsoft extensions to
the Clang syntax checker.

@item
@gh{ptrv, Peter Vasil} contributed syntax checkers for XML, Lua and Go
(using @command{go build} and @command{go test}), added unit tests and
did valuable testing.

@item
@gh{rdallasgray, Robert Dallas Gray} made error display customizable
with @code{flycheck-display-errors-function}.

@item
@gh{robert-zaremba, Robert Zaremba} added Go syntax checker using
@command{gofmt}.

@item
@gh{steckerhalter, steckerhalter} provided the PHP CodeSniffer checker.

@item
@gh{purcell, Steve Purcell} implemented many checkers, contributed
important ideas to the design of the checker API and engaged in
worthwhile discussion to shape this project.

@item
@gh{syl20bnr, Sylvain Benner} added syntax checkers for Elixir and
Erlang, and wrote the cool @gh{flycheck/flycheck-color-mode-line,
flycheck-color-mode-line} extension.

@item
@gh{thisirs, Sylvain Rousseau} added a syntax checker for POSIX shell
script using @command{bash}, and improved error parsing in the Bash
script syntax checker.

@item
@gh{tzz, Ted Zlatanov} added a syntax checker for CFEngine.

@item
@gh{tom-tan, tom tan} added a syntax checker for the D programming
language using @command{dmd}, and wrote the cool
@gh{flycheck/flycheck-d-unittest, flycheck-d-unittest} extension.

@item
@gh{yannick1974, Yannick Roehlly} added support for PEP8 naming errors
to the Flake8 syntax checker.

@item
@gh{yasuyk, Yasuyuki Oka} contributed a lot of syntax checkers for
various languages, including AsciiDoc, Chef recipes, ERuby, Handlebars,
Javascript, PHP, Racket, Ruby, Slim and YAML.

@item
@gh{vderyagin, Victor Deryagin} added the Rust syntax checker.
@end itemize

Of course we also need to thank @ref{Top, ,GNU Flymake, flymake}, the
first, respectable, though somewhat failed attempt at on-the-fly syntax
checking.

@node GNU Free Documentation License, Syntax checkers, Credits, Top
@comment  node-name,  next,  previous,  up
@appendix GNU Free Documentation License

@include fdl-1.3.texi

@node Syntax checkers, Definition Index, GNU Free Documentation License, Top
@comment  node-name,  next,  previous,  up
@appendix Available syntax checkers

The following syntax checkers are included in Flycheck, listed in the
order of their appearance in the default value of
@code{flycheck-checkers}:

@itemize @bullet
@iflyc asciidoc
@iflyc bash
@iflyc c/c++-clang
@iflyc c/c++-cppcheck
@iflyc cfengine
@iflyc chef-foodcritic
@iflyc coffee
@iflyc coffee-coffeelint
@iflyc css-csslint
@iflyc d-dmd
@iflyc elixir
@iflyc emacs-lisp
@iflyc emacs-lisp-checkdoc
@iflyc erlang
@iflyc eruby-erubis
@iflyc go-gofmt
@iflyc go-build
@iflyc go-test
@iflyc haml
@iflyc handlebars
@iflyc haskell-ghc
@iflyc haskell-hlint
@iflyc html-tidy
@iflyc javascript-jshint
@iflyc javascript-eslint
@iflyc javascript-gjslint
@iflyc json-jsonlint
@iflyc less
@iflyc lua
@iflyc perl
@iflyc php
@iflyc php-phpmd
@iflyc php-phpcs
@iflyc puppet-parser
@iflyc puppet-lint
@iflyc python-flake8
@iflyc python-pylint
@iflyc racket
@iflyc rst
@iflyc rst-sphinx
@iflyc ruby-rubocop
@iflyc ruby-rubylint
@iflyc ruby
@iflyc ruby-jruby
@iflyc rust
@iflyc sass
@iflyc scala
@iflyc scss
@iflyc sh-dash
@iflyc sh-bash
@iflyc slim
@iflyc tex-chktex
@iflyc tex-lacheck
@iflyc texinfo
@iflyc verilog-verilator
@iflyc xml-xmlstarlet
@iflyc xml-xmllint
@iflyc yaml-jsyaml
@iflyc yaml-ruby
@iflyc zsh
@end itemize

Use @kbd{M-x flycheck-describe-checker} in this buffer to get help for
the syntax checker under point.

@node Definition Index,  , Syntax checkers, Top
@comment  node-name,  next,  previous,  up
@unnumbered Type, Function and Variable Definition Index

@printindex cp

@bye

@c Local Variables:
@c mode: texinfo
@c TeX-master: t
@c TeX-command-default: "Makeinfo"
@c coding: utf-8
@c End:
